// source: tags.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var messages_pb = require('./messages_pb.js');
goog.object.extend(proto, messages_pb);
goog.exportSymbol('proto.moglogie.tags.Tag', null, global);
goog.exportSymbol('proto.moglogie.tags.Tag.Type', null, global);
goog.exportSymbol('proto.moglogie.tags.TagReply', null, global);
goog.exportSymbol('proto.moglogie.tags.TagsReply', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.moglogie.tags.Tag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.moglogie.tags.Tag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.moglogie.tags.Tag.displayName = 'proto.moglogie.tags.Tag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.moglogie.tags.TagReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.moglogie.tags.TagReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.moglogie.tags.TagReply.displayName = 'proto.moglogie.tags.TagReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.moglogie.tags.TagsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.moglogie.tags.TagsReply.repeatedFields_, null);
};
goog.inherits(proto.moglogie.tags.TagsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.moglogie.tags.TagsReply.displayName = 'proto.moglogie.tags.TagsReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.moglogie.tags.Tag.prototype.toObject = function(opt_includeInstance) {
  return proto.moglogie.tags.Tag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.moglogie.tags.Tag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.moglogie.tags.Tag.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    values: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.moglogie.tags.Tag}
 */
proto.moglogie.tags.Tag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.moglogie.tags.Tag;
  return proto.moglogie.tags.Tag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.moglogie.tags.Tag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.moglogie.tags.Tag}
 */
proto.moglogie.tags.Tag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.moglogie.tags.Tag.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.moglogie.tags.Tag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.moglogie.tags.Tag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.moglogie.tags.Tag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.moglogie.tags.Tag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getValues();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.moglogie.tags.Tag.Type = {
  STRING: 0,
  ENUM: 1,
  NUMBER: 2,
  BOOLEAN: 3,
  ARTICLE: 4,
  RESOURCE: 5
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.moglogie.tags.Tag.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.moglogie.tags.Tag} returns this
 */
proto.moglogie.tags.Tag.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.moglogie.tags.Tag.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.moglogie.tags.Tag} returns this
 */
proto.moglogie.tags.Tag.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.moglogie.tags.Tag.Type}
 */
proto.moglogie.tags.Tag.prototype.getType = function() {
  return /** @type {!proto.moglogie.tags.Tag.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.moglogie.tags.Tag.Type} value
 * @return {!proto.moglogie.tags.Tag} returns this
 */
proto.moglogie.tags.Tag.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string values = 4;
 * @return {string}
 */
proto.moglogie.tags.Tag.prototype.getValues = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.moglogie.tags.Tag} returns this
 */
proto.moglogie.tags.Tag.prototype.setValues = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.moglogie.tags.TagReply.prototype.toObject = function(opt_includeInstance) {
  return proto.moglogie.tags.TagReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.moglogie.tags.TagReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.moglogie.tags.TagReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tag: (f = msg.getTag()) && proto.moglogie.tags.Tag.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.moglogie.tags.TagReply}
 */
proto.moglogie.tags.TagReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.moglogie.tags.TagReply;
  return proto.moglogie.tags.TagReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.moglogie.tags.TagReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.moglogie.tags.TagReply}
 */
proto.moglogie.tags.TagReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.modlogie.messages.Error} */ (reader.readEnum());
      msg.setError(value);
      break;
    case 2:
      var value = new proto.moglogie.tags.Tag;
      reader.readMessage(value,proto.moglogie.tags.Tag.deserializeBinaryFromReader);
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.moglogie.tags.TagReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.moglogie.tags.TagReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.moglogie.tags.TagReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.moglogie.tags.TagReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTag();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.moglogie.tags.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * optional modlogie.messages.Error error = 1;
 * @return {!proto.modlogie.messages.Error}
 */
proto.moglogie.tags.TagReply.prototype.getError = function() {
  return /** @type {!proto.modlogie.messages.Error} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.modlogie.messages.Error} value
 * @return {!proto.moglogie.tags.TagReply} returns this
 */
proto.moglogie.tags.TagReply.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Tag tag = 2;
 * @return {?proto.moglogie.tags.Tag}
 */
proto.moglogie.tags.TagReply.prototype.getTag = function() {
  return /** @type{?proto.moglogie.tags.Tag} */ (
    jspb.Message.getWrapperField(this, proto.moglogie.tags.Tag, 2));
};


/**
 * @param {?proto.moglogie.tags.Tag|undefined} value
 * @return {!proto.moglogie.tags.TagReply} returns this
*/
proto.moglogie.tags.TagReply.prototype.setTag = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.moglogie.tags.TagReply} returns this
 */
proto.moglogie.tags.TagReply.prototype.clearTag = function() {
  return this.setTag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.moglogie.tags.TagReply.prototype.hasTag = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.moglogie.tags.TagsReply.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.moglogie.tags.TagsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.moglogie.tags.TagsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.moglogie.tags.TagsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.moglogie.tags.TagsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.moglogie.tags.Tag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.moglogie.tags.TagsReply}
 */
proto.moglogie.tags.TagsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.moglogie.tags.TagsReply;
  return proto.moglogie.tags.TagsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.moglogie.tags.TagsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.moglogie.tags.TagsReply}
 */
proto.moglogie.tags.TagsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.modlogie.messages.Error} */ (reader.readEnum());
      msg.setError(value);
      break;
    case 2:
      var value = new proto.moglogie.tags.Tag;
      reader.readMessage(value,proto.moglogie.tags.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.moglogie.tags.TagsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.moglogie.tags.TagsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.moglogie.tags.TagsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.moglogie.tags.TagsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.moglogie.tags.Tag.serializeBinaryToWriter
    );
  }
};


/**
 * optional modlogie.messages.Error error = 1;
 * @return {!proto.modlogie.messages.Error}
 */
proto.moglogie.tags.TagsReply.prototype.getError = function() {
  return /** @type {!proto.modlogie.messages.Error} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.modlogie.messages.Error} value
 * @return {!proto.moglogie.tags.TagsReply} returns this
 */
proto.moglogie.tags.TagsReply.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Tag tags = 2;
 * @return {!Array<!proto.moglogie.tags.Tag>}
 */
proto.moglogie.tags.TagsReply.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.moglogie.tags.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.moglogie.tags.Tag, 2));
};


/**
 * @param {!Array<!proto.moglogie.tags.Tag>} value
 * @return {!proto.moglogie.tags.TagsReply} returns this
*/
proto.moglogie.tags.TagsReply.prototype.setTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.moglogie.tags.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.moglogie.tags.Tag}
 */
proto.moglogie.tags.TagsReply.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.moglogie.tags.Tag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.moglogie.tags.TagsReply} returns this
 */
proto.moglogie.tags.TagsReply.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


goog.object.extend(exports, proto.moglogie.tags);
